# Example docker build:
#   docker build \
#        --build-arg=DEBFULLNAME="Dan Isla" \
#        --build-arg=DEBEMAIL=dan.isla@gmail.com \
#        --build-arg=PKG_NAME=selkies-js-interposer \
#        --build-arg=PKG_VERSION=0.0.1 \
#        --build-arg=DISTRIB_RELEASE=22.04 \
#        -t selkies-js-interposer-deb:latest -f Dockerfile.ubuntu_debpkg .

ARG DISTRIB_RELEASE=22.04
FROM ubuntu:${DISTRIB_RELEASE} as build

RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
        build-essential \
        gcc-multilib && \
    rm -rf /var/lib/apt/lists/*

ARG PKG_NAME="selkies-js-interposer"
ARG PKG_VERSION="0.0.0"
ARG DEBFULLNAME="Dan Isla"
ARG DEBEMAIL="danisla@users.noreply.github.com"

WORKDIR /opt/build
COPY . .
RUN ./build_ubuntu_deb.sh

ARG DISTRIB_RELEASE
FROM ubuntu:${DISTRIB_RELEASE} as test
ARG PKG_NAME
ARG PKG_VERSION
ARG DEBFULLNAME
ARG DEBEMAIL

COPY --from=build /opt/${PKG_NAME}_${PKG_VERSION}.deb /opt/${PKG_NAME}_${PKG_VERSION}.deb

WORKDIR /opt

RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
        /opt/${PKG_NAME}_${PKG_VERSION}.deb \
        gcc && \
    rm -rf /var/lib/apt/lists/*

RUN stat "/usr/lib/$(gcc -print-multiarch | sed -e 's/i.*86/i386/')/selkies-js-interposer/joystick_interposer.so" && \
    if [ "$(dpkg --print-architecture)" == "amd64" ]; then stat "/usr/lib/$(gcc -m32 -print-multiarch | sed -e 's/i.*86/i386/')/selkies-js-interposer/joystick_interposer.so"; fi
