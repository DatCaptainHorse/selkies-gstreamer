# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

name: Build & publish image

inputs:
  build_args:
    description: Docker container build arguments (ARG)
    required: false
  dockerfile:
    default: "Dockerfile"
    description: Dockerfile path within context
    required: false
  context:
    default: "."
    description: Image build context
    required: false
  push:
    default: ${{ github.event_name != 'pull_request' }}
    description: Push image to registry
    required: false
  platforms:
    default: |
      linux/amd64
    description: Build architectures
    required: false
  registry:
    default: "ghcr.io"
    description: Image registry
    required: false
  username:
    default: "${{ github.actor }}"
    description: Registry username
    required: false
  password:
    default: "${{ github.token }}"
    description: Registry password
    required: false
  prefix:
    default: "${{ github.repository }}"
    description: Image prefix
    required: false
  subproject:
    description: Subproject name
    required: true
  tags:
    description: Full image names with tags
    required: true

runs:
  using: composite
  steps:
  - name: Set up QEMU
    uses: docker/setup-qemu-action@v3

  - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@v3

  - name: Log into registry ${{ inputs.registry }}
    if: ${{ inputs.push }}
    uses: docker/login-action@v3
    with:
      registry: ${{ inputs.registry }}
      username: ${{ inputs.username }}
      password: ${{ inputs.password }}

  - name: Extract container metadata
    id: meta
    uses: docker/metadata-action@v5
    with:
      images: ${{ inputs.registry }}/${{ inputs.prefix }}/${{ inputs.subproject }}

  - name: Build and push ${{ inputs.subproject }} container image
    uses: docker/build-push-action@v5
    with:
      build_args: ${{ inputs.build_args }}
      context: ${{ inputs.context }}
      file: ${{ inputs.dockerfile }}
      platforms: ${{ inputs.platforms }}
      push: ${{ inputs.push }}
      tags: ${{ inputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
